[project]
authors = [
    {name = "Contactless", email = "postmaster@localhost"},
]
license = {text = "MPL"}
requires-python = "<3.15,>=3.12"
dependencies = [
    "fastapi<1.0.0,>=0.119.0",
    "pydantic[email]<3.0.0,>=2.12.3",
    "uvicorn[standard]<1.0.0,>=0.38.0",
    "atlassian-python-api<5.0.0,>=4.0.7",
    "dockerflow[fastapi]==2024.4.2",
    "Jinja2<4.0.0,>=3.1.6",
    "sentry-sdk[fastapi]<3.0.0,>=2.42.0",
    "pydantic-yaml<2.0.0,>=1.6.0",
    "backoff<3.0.0,>=2.2.1",
    "statsd<5.0.0,>=4.0.1",
    "requests<3.0.0,>=2.32.5",
    "pydantic-settings<3.0.0,>=2.11.0",
    "pypandoc<2.0,>=1.15",
    "pytest-cov>=7.0.0",
]
name = "jbi"
version = "0"
description = "jira-bugzilla-integration"

[project.scripts]
jbi = "jbi.__main__:cli"

[dependency-groups]
dev = [
    "click<9.0.0,>=8.3.0",
    "pre-commit<5.0.0,>=4.3.0",
    "coverage[toml]<8.0,>=7.11",
    "mypy<2.0,>=1.18",
    "detect-secrets<2.0.0,>=1.5.0",
    "bandit<2.0.0,>=1.8.6",
    "pytest<9.0.0,>=8.4.2",
    "yamllint<2.0.0,>=1.37.1",
    "pytest-dotenv<1.0.0,>=0.5.2",
    "types-requests<3.0.0,>=2.32.4",
    "responses<1.0.0,>=0.25.8",
    "httpx<1.0.0,>=0.28.1",
    "factory-boy<4.0.0,>=3.3.3",
    "pytest-factoryboy<3.0.0,>=2.8.1",
    "ruff<1.0.0,>=0.14.1",
    "pytest-mock<4.0.0,>=3.15.1",
    "pytest-asyncio<2.0.0,>=1.2.0",
]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.ruff]
target-version = "py312"
lint.extend-select = ["I"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.pytest.ini_options]
testpaths = [
    "tests/unit",
]
env_override_existing_values = true
env_files = [
    ".env.example"
]
markers = [
    "no_mocked_bugzilla",
    "no_mocked_jira",
]

[tool.mypy]
python_version = "3.13"
# Warn when returning Any from function with non-Any return
warn_return_any = true
plugins = "pydantic.mypy"

[[tool.mypy.overrides]]
module = ["ruamel", "bugzilla", "atlassian", "atlassian.rest_client", "statsd.defaults.env", "dockerflow.*"]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "jbi.app"
]
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_unused_ignores = true
warn_return_any = true
no_implicit_reexport = true
strict_equality = true
strict_concatenate = true

[tool.coverage]
# https://github.com/nedbat/coveragepy
    [tool.coverage.run]
    omit = [
        '*/.local/*',
        '/usr/*',
        '*/.venv/*',
        '*/.tox/*',
        '*/virtualenvs/*',
    ]

    [tool.coverage.report]

    exclude_lines = [
        "# noqa",
        "raise NotImplementedError",
        "pragma: no cover",
        "def __repr__",
        "if .debug:",
        "raise NotImplementedError",
        "if __name__ == .__main__.:",
        "logger.",
        "from",
        "import"
    ]
